# Generated by Django 3.2.7 on 2022-02-13 14:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cache_Adresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse', models.CharField(max_length=200, unique=True)),
                ('nœuds_à_découper', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=100)),
                ('nom_norm', models.CharField(max_length=100)),
                ('code', models.IntegerField(null=True)),
                ('code_insee', models.IntegerField()),
                ('population', models.IntegerField()),
                ('densité', models.SmallIntegerField()),
                ('géom_texte', models.TextField(null=True)),
                ('données_présentes', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('ville_défaut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dijk.ville')),
            ],
        ),
        migrations.CreateModel(
            name='Ville_Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ville', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dijk.ville')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dijk.zone')),
            ],
        ),
        migrations.CreateModel(
            name='Ville_Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ville1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ville1', to='dijk.ville')),
                ('ville2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ville2', to='dijk.ville')),
            ],
        ),
        migrations.CreateModel(
            name='Sommet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_osm', models.BigIntegerField(unique=True)),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('zone', models.ManyToManyField(to='dijk.Zone')),
            ],
        ),
        migrations.CreateModel(
            name='Rue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=200)),
                ('nom_norm', models.CharField(max_length=200)),
                ('nœuds_à_découper', models.TextField()),
                ('ville', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dijk.ville')),
            ],
        ),
        migrations.CreateModel(
            name='Chemin_d',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ar', models.BooleanField(default=False)),
                ('p_détour', models.FloatField()),
                ('étapes_texte', models.TextField()),
                ('interdites_texte', models.TextField(blank=True, default=None, null=True)),
                ('utilisateur', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('dernier_p_modif', models.FloatField(blank=True, default=None, null=True)),
                ('début', models.CharField(max_length=255)),
                ('fin', models.CharField(max_length=255)),
                ('interdites_début', models.CharField(max_length=255)),
                ('interdites_fin', models.CharField(max_length=255)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dijk.zone')),
            ],
        ),
        migrations.CreateModel(
            name='Arête',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longueur', models.FloatField()),
                ('cycla', models.FloatField(blank=True, default=None, null=True)),
                ('cycla_défaut', models.FloatField(default=1.0)),
                ('geom', models.TextField()),
                ('nom', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('sensInterdit', models.BooleanField(default=False)),
                ('arrivée', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sommet_arrivée', to='dijk.sommet')),
                ('départ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sommet_départ', to='dijk.sommet')),
                ('rue', models.ManyToManyField(to='dijk.Rue')),
                ('zone', models.ManyToManyField(to='dijk.Zone')),
            ],
        ),
        migrations.AddConstraint(
            model_name='ville_zone',
            constraint=models.UniqueConstraint(fields=('zone', 'ville'), name='Pas de relation en double.'),
        ),
        migrations.AddConstraint(
            model_name='ville_ville',
            constraint=models.UniqueConstraint(fields=('ville1', 'ville2'), name='Pas de relation ville_ville en double.'),
        ),
        migrations.AddConstraint(
            model_name='rue',
            constraint=models.UniqueConstraint(fields=('nom_norm', 'ville'), name='une seule rue pour chaque nom_norm pour chaque ville.'),
        ),
        migrations.AddConstraint(
            model_name='chemin_d',
            constraint=models.UniqueConstraint(fields=('ar', 'p_détour', 'début', 'fin', 'interdites_début', 'interdites_fin'), name='Pas de chemins en double.'),
        ),
    ]
